<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>avlt_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>avltree_8h.html</Path>
    <Anchor>ac41258abee36abb4bd1515a497515523</Anchor>
    <DeclaredIn>avltree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avlt_free_value_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>avltree_8h.html</Path>
    <Anchor>af9966d59e7e2a84cc246b07785ccc6e2</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being overw...</Abstract>
    <DeclaredIn>avltree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avlt_walk_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>avltree_8h.html</Path>
    <Anchor>ad103a4327860b77b11afc9a86686e8f1</Anchor>
    <Abstract>Callback called for each node when walking the tree.</Abstract>
    <DeclaredIn>avltree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avlt_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>avltree_8h.html</Path>
    <Anchor>a2f4f6cc65222ccd15f1c08c994675c68</Anchor>
    <Abstract>Create a new AVL tree.</Abstract>
    <DeclaredIn>avltree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avlt_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>avltree_8h.html</Path>
    <Anchor>ae988fe551051cdf5a525e12e6dde6933</Anchor>
    <Abstract>Release all the resources used by an AVL tree.</Abstract>
    <DeclaredIn>avltree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avlt_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>avltree_8h.html</Path>
    <Anchor>a34d4806ee12e635cfe9667ed733543a7</Anchor>
    <Abstract>Add a new value into the tree.</Abstract>
    <DeclaredIn>avltree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avlt_remove</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>avltree_8h.html</Path>
    <Anchor>a663e77eeddba467601043f4d70a947e7</Anchor>
    <Abstract>Remove a node from the tree.</Abstract>
    <DeclaredIn>avltree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avlt_walk</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>avltree_8h.html</Path>
    <Anchor>a82a1af9869b504d979786b8df5d3cc5e</Anchor>
    <Abstract>Walk the entire tree and call the callback for each visited node.</Abstract>
    <DeclaredIn>avltree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>avlt_walk_sorted</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>avltree_8h.html</Path>
    <Anchor>a2c63b3e2b264002e44a7e200befd744b</Anchor>
    <Abstract>Walk the entire tree visiting nodes in ascending order and call the callback for each visited node...</Abstract>
    <DeclaredIn>avltree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a996b18d437efeba2d2cedca7d21aa544</Anchor>
    <Abstract>Opaque structure representing the heap.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_incr_key_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>af4809e06c94bcb9d2569d8d19dc3a2d1</Anchor>
    <Abstract>Callback used to compare two keys.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_decr_key_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a4b8fbd1a16e176618a72cefd5e842ba1</Anchor>
    <Abstract>Callback used to decrement a given key by an arbitrary amount.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_walk_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a7399dded9cf949f37cb3e8f966368fc7</Anchor>
    <Abstract>Callback called for each node when walking the priority queue.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>ad1d7b1dd2c965385b60953890cbffd77</Anchor>
    <Abstract>Create a new binomial heap.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a19700a45f509b2fd305dcaf68b0a196c</Anchor>
    <Abstract>Release all the resources used by a binomial heap.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_insert</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>aec5fcb728521b60e49d652f37e18933d</Anchor>
    <Abstract>Insert a new value into the heap.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_minimum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a2a334afddd72ac7e9ed37f2f2e126659</Anchor>
    <Abstract>Retrieve the minimum item in the heap.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_maximum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a40267419a2ac136c084926679ae89e6b</Anchor>
    <Abstract>Retrieve the maximum item in the heap.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_delete_minimum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a766760f7edeaf0ab43e0e0901332485b</Anchor>
    <Abstract>Delete the minimum item in the heap (and eventually retrieve its value)</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_delete_maximum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a688ebb7c8173a23bb286be51bc5a0091</Anchor>
    <Abstract>Delete the maximum item in the heap (and eventually retrieve its value)</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_delete</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a000f7c302a21d10048309194eea9b795</Anchor>
    <Abstract>Delete at most one item matching a given key in the heap.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_increase_minimum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a36c5240484646bdfe4fbeda64efe13a6</Anchor>
    <Abstract>Increase the minimum key by an arbitrary amount.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_increase_maximum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a38f39cc407f8d86e5436ae90174d6b68</Anchor>
    <Abstract>Increase the maximum key by an arbitrary amount.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_decrease_minimum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a643f08473fb897257daec11703acf83d</Anchor>
    <Abstract>Decrease the minimum key by an arbitrary amount.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_decrease_maximum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a3c2003e2ce3d254bceb63a8a12df22b9</Anchor>
    <Abstract>Decrease the maximum key by an arbitrary amount.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_increase_key</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>ad9dee194e7bd6dbd21ef6d256a9e6520</Anchor>
    <Abstract>Increase a given key by an arbitrary amount.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_decrease_key</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>ab4170563eca3188a231a716f6bdf2c73</Anchor>
    <Abstract>Decrease a given key by an arbitrary amount.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_merge</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a12ae86c3af700313d1a1689df61c12f0</Anchor>
    <Abstract>Merge two heaps.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_walk</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>adcde2fb22431b163d45f77ca433c878c</Anchor>
    <Abstract>Walk the entire priority queue and call the provided callback for each visited node.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>aa733db191b87bf6bb2b9f246d9c23348</Anchor>
    <Abstract>Return the number of items in the heap.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_keys_callbacks_int16_t</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a7417981b93895ad623a7fbca4b858acf</Anchor>
    <Abstract>Default callbacks to handle 16bit signed integer keys.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_keys_callbacks_int32_t</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a1eb4890a1e3835d51873cc496ddd7ae0</Anchor>
    <Abstract>Default callbacks to handle 32bit signed integer keys.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_keys_callbacks_int64_t</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>ad490f0983a7753466835e1fad2e21a2a</Anchor>
    <Abstract>Default callbacks to handle 64bit signed integer keys.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_keys_callbacks_uint16_t</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a030c1e1b0d33724e1e49089cd4883533</Anchor>
    <Abstract>Default callbacks to handle 16bit unsigned integer keys.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_keys_callbacks_uint32_t</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a4a629ec0c95b9a859de193e69e88910e</Anchor>
    <Abstract>Default callbacks to handle 32bit unsigned integer keys.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_keys_callbacks_uint64_t</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a305679dbcb981392d4f2d4efc61fde37</Anchor>
    <Abstract>Default callbacks to handle 64bit unsigned integer keys.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_keys_callbacks_float</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>ac16dcffaa7f68487b68636dd4996627d</Anchor>
    <Abstract>Default callbacks to handle float keys.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binheap_keys_callbacks_double</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a2516e9d1fe4164c5d40ee65e528ab4b3</Anchor>
    <Abstract>Default callbacks to handle double keys.</Abstract>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BINHEAP_MODE_MAX</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a742affb06865627d216e6b001a7694f7adb9c014247ac0e580c7c3156e093910d</Anchor>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BINHEAP_MODE_MIN</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>binheap_8h.html</Path>
    <Anchor>a742affb06865627d216e6b001a7694f7aa15e68c78c041cdd4363de055e242f53</Anchor>
    <DeclaredIn>binheap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LIBHL_CMP_KEYS_TYPE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>a3c3cf74be68bcb3843719d08733b961b</Anchor>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libhl_cmp_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>ae449dfb37b34f92e03af505cf97eaeb9</Anchor>
    <Abstract>Callback that, if provided, will be used to compare node keys. If not defined memcmp() will be used i...</Abstract>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libhl_cmp_keys_int16</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>a302667993b5be05b0613163c0ef389e5</Anchor>
    <Abstract>16bit signed integers comparator</Abstract>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libhl_cmp_keys_int32</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>aef00597960aa3d04489634d488144993</Anchor>
    <Abstract>32bit signed integers comparator</Abstract>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libhl_cmp_keys_int64</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>af230286656dd483660c0a7b0ab347c8c</Anchor>
    <Abstract>64bit signed integers comparator</Abstract>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libhl_cmp_keys_uint16</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>a1669d3f4a3e584619433a3e6a215451a</Anchor>
    <Abstract>16bit unsigned integers comparator</Abstract>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libhl_cmp_keys_uint32</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>a703d5d5427b8af0b72678ebb69fdbeab</Anchor>
    <Abstract>32bit unsigned integers comparator</Abstract>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libhl_cmp_keys_uint64</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>a1a1f577ce1f1450cc09ea33706c00c15</Anchor>
    <Abstract>64bit unsigned integers comparator</Abstract>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libhl_cmp_keys_float</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>a1782b2d638df6ddcca3eb8aa57e7c9df</Anchor>
    <Abstract>float comparator</Abstract>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>libhl_cmp_keys_double</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>comparators_8h.html</Path>
    <Anchor>a4b880e49d011babb03badabf514d9884</Anchor>
    <Abstract>double comparator</Abstract>
    <DeclaredIn>comparators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBUF_MAXLEN_NONE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a993d9cce2f1efd0251cacbbb816c837b</Anchor>
    <Abstract>No preferred maximum length for fbuf.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FBUF_STATIC_INITIALIZER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ad8593ea2aa21d6224dfbd9e9437c08b5</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a5bbf3873d69d8f83fb3511f7da6dc66c</Anchor>
    <Abstract>Allocate and initialise a fbuf structure.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_move</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>aa06137d49446356e819eab0cceb36038</Anchor>
    <Abstract>Move the fbuf from one structure to the other.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_swap</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a39f1759d1bd069abcc0c8a4765ad1206</Anchor>
    <Abstract>Exchange the two fbuf structures.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_duplicate</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a394dd6475322d6a5604a570e9e6fad19</Anchor>
    <Abstract>Duplicate the fbuf structure into a new fbuf structure.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_extend</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>aef719f59c276f9f242cfde7dd9282194</Anchor>
    <Abstract>Extend the size of the buffer to newlen.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_shrink</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ab9b318dc4cdd2269b784575bd3b6f974</Anchor>
    <Abstract>Shrink the memory used by the buffer to fit the contents.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_clear</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a3a177311c41ab8295af67d91c646d10a</Anchor>
    <Abstract>Clear the fbuf.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a85a59db235c4ca73d2bfb8b3071ba24a</Anchor>
    <Abstract>Destroys all information in the fbuf.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_free</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a64d3d9629da7ef81ea707581e589fabe</Anchor>
    <Abstract>Deallocates the fbuf structure after destroying it.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_add_binary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ac838cf275a418e358d2d41225b5b64a1</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>adb81eb587f061953ff0d360c852a18a2</Anchor>
    <Abstract>Add data to the buffer.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_add_ln</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ab9981daeef36a68fc7864b797ef53797</Anchor>
    <Abstract>Add data to the buffer, including a trailing newline.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_prepend</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a21df1a5926cf956b8d896453a4112b2e</Anchor>
    <Abstract>Prepend the string to the fbuf.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_prepend_binary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a5a17654c83c4c07c9bb10a57fb40fa19</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_concat</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ad83c70c7bc71fe525f73bf186b7b6054</Anchor>
    <Abstract>Concatenates fbufsrc after fbufdst.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_copy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a53d0d5362a556cb16a689a2f5f969f37</Anchor>
    <Abstract>Copy the string fbufsrc into fbufdst.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_set</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a28c7e5a55ef80c3ca6040a7f3db95e14</Anchor>
    <Abstract>Set the fbuf to a string.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_printf</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a361d94732f976de466b38b61e24bc104</Anchor>
    <Abstract>Add a string produced through printf to the fbuf.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_fread</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a12bb9f118cd28c648ecaf294e77700bb</Anchor>
    <Abstract>Read at most explen bytes from a file.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_read</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ad82b27564b53e780eacc73e2aae2d8de</Anchor>
    <Abstract>Read at most explen bytes from a file.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_read_ln</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>adf313dc9b51446e21d8c2b79fbea6472</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_fread_ln</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a9273a7a697a55ffd30453f0527eab927</Anchor>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_write</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a98ca3094719a4623dc4d70831066c456</Anchor>
    <Abstract>Write data from the fbuf to the file descriptor.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_remove</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>aab1af7d259449553c82a9080ae206ec6</Anchor>
    <Abstract>Remove bytes from the beginning of the buffer.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_trim</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ade3925fd12c4f5ee456bba9ce4d37638</Anchor>
    <Abstract>Remove leading whitespace.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_rtrim</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a9ed4bd8803d41f1ceee1114c63ad6971</Anchor>
    <Abstract>Remove trailing whitespace.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_data</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>aa6ac893db026ed58e4c3ea534798c8d2</Anchor>
    <Abstract>Return a pointer to the buffer.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_end</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a4a6067a97f5c3b70500587e866a88326</Anchor>
    <Abstract>Return a pointer to the end of the buffer (&amp;#39;\0&amp;#39;).</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_set_used</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ac1be357b3ffa582754054f9c8a1bbf4b</Anchor>
    <Abstract>Set the used value on the fbuf.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_used</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>ac31470e0ab27d2a0f82f21fad7adb052</Anchor>
    <Abstract>Return the number of characters in the buffer.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_len</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a4f38cd69f69751f9247077ed466edfa3</Anchor>
    <Abstract>Return current length of buffer.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_set_prefmaxlen</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a7986e76d917a915a54e06b46ab184635</Anchor>
    <Abstract>Set the prefmaxlen value on the fbuf.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_prefmaxlen</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a20893876523be9b446fc37dc2fd26755</Anchor>
    <Abstract>Return the currently set preferred maximum length of the buffer.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_set_maxlen</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>a3a8083e2a231581d74c1f73c7a1c8ae1</Anchor>
    <Abstract>Set a hard limit on the size of all buffers.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fbuf_maxlen</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>fbuf_8h.html</Path>
    <Anchor>af33ea67b9974ff1ea7450ebea4eca1bd</Anchor>
    <Abstract>Return the current hard limit on the size of all buffers.</Abstract>
    <DeclaredIn>fbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hashtable_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ace05395b475bc06fb177b26e49d39d7e</Anchor>
    <Abstract>Opaque structure representing the actual hash table descriptor.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_free_item_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>af161ed5732eaf241e213225e4f4bdc21</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being remov...</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_deep_copy_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a84528d0690638e55d59b2450a868932a</Anchor>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_key_iterator_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ac4fd3a3838e3907c932df496adeb6ad9</Anchor>
    <Abstract>Callback for the key iterator.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_value_iterator_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ab2671cf84e40bec9b6043530315e662f</Anchor>
    <Abstract>Callback for the value iterator.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_pair_iterator_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a308e47d54a253e1f4d449c8e080adf1e</Anchor>
    <Abstract>Callback for the pair iterator.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a18e6cefb6b549178fe5cf72be36b661b</Anchor>
    <Abstract>Create a new table descriptor.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_init</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a182a34e175eed9648d954dfd045f7016</Anchor>
    <Abstract>Initialize a pre-allocated table descriptor.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_set_free_item_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a788342a6b374e13800f74d4979bf622c</Anchor>
    <Abstract>Set the callback which must be called to release values stored in the table.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_clear</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a07073073c6e7b5141d03013dcc20cb87</Anchor>
    <Abstract>Clear the table by removing all the stored items.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a29c3f28d506736317ab22f7c899c5120</Anchor>
    <Abstract>Destroy the table by releasing all its resources.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a2a6ad398fdbe8eda5f9bbb2cb897c538</Anchor>
    <Abstract>Get the value stored at a specific key.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_exists</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ab1d1778575523230aa0a759182c09661</Anchor>
    <Abstract>Check if a key exists in the hashtable.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_copy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>af7bc8e7ca01bfaf3b38f67ad6136ed5b</Anchor>
    <Abstract>Get a copy of the value stored at a specific key.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_deep_copy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a6580d5babb85d99b16ca391c4932f3a3</Anchor>
    <Abstract>Get a copy of the value stored at a specific key.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_set</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a3998c73de95b1d70beea5a1f74ec10eb</Anchor>
    <Abstract>Set the value for a specific key.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_and_set</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a56641e2698e186f285f2f3b534e81faf</Anchor>
    <Abstract>Set the value for a specific key and returns the previous value if any.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_or_set</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a6006fd5293f356d715f5238c29a98ec8</Anchor>
    <Abstract>Get the value for a specific key or set a new value if none has been found.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_set_copy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ad82c7bb975914dd57eb3ffdd6ebd53bb</Anchor>
    <Abstract>Set the value for a specific key and returns the previous value if any.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_set_if_not_exists</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a11fddc040a47a08f061ef5f601673907</Anchor>
    <Abstract>Set the value for a specific key if there is no value already stored.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_unset</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>acb0cee52fd90674fa4b4803dc9802736</Anchor>
    <Abstract>Unset the value stored at a specific key.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_delete</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a7a4ea1163a3ec648ce62ec76b04ca9a2</Anchor>
    <Abstract>Delete the value stored at a specific key.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>aaac9787728ecc64a959ceefd252432bc</Anchor>
    <Abstract>Return the count of items actually stored in the table.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_all_keys</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a34d9befdf23b777546d376bdd35f6678</Anchor>
    <Abstract>Get all stored keys.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_get_all_values</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>a4d368732b5f4562b547771985f23638a</Anchor>
    <Abstract>Get all stored values.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_foreach_key</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ac782c7ba309e5583075c805639546c79</Anchor>
    <Abstract>Key iterator.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_foreach_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>af6d1d0a58ae358f4a8d3670cfe567ed2</Anchor>
    <Abstract>Value iterator.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ht_foreach_pair</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>hashtable_8h.html</Path>
    <Anchor>ad5ad9c730fe61aa6a95062a5a4d67531</Anchor>
    <Abstract>Pair iterator.</Abstract>
    <DeclaredIn>hashtable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TV_TYPE_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ab3c14a55d9569c7f67f63ecb908d9a43</Anchor>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TV_TYPE_BINARY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>af6761dfe1c80fd67146dd589f152d83c</Anchor>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TV_TYPE_LIST</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ae4d45b8aeedfd53b5bbd4ed1ba7c8e82</Anchor>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>free_value_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a1bbfe021a88223b9fcdf5b43b465d79e</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being remov...</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linked_list_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a4a0270278690b38e0be6fc777986be44</Anchor>
    <Abstract>Opaque structure representing the actual linked list descriptor.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>item_handler_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ae09c4acbb9d439745f54e8452177d0fe</Anchor>
    <Abstract>Callback for the value iterator.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_list</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>af7597e9174195aef25a196f3abce0dab</Anchor>
    <Abstract>Create a new list.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init_list</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a070a06644393d37fe6ca88f38a909ba4</Anchor>
    <Abstract>Initialize a pre-allocated list.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy_list</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aa2d0253e1e9a512272bb1ed0294e38d0</Anchor>
    <Abstract>Release all resources related to the list.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear_list</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a24ba290817d86a726fdeec3d353ad859</Anchor>
    <Abstract>remove all items from the list</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>list_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a016eed8897a7ce100d0d8aa7dcfc528d</Anchor>
    <Abstract>Return the total count of items in the list.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_free_value_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aa8fd43a52f935eda6509e8db64ae1c36</Anchor>
    <Abstract>Set the callback which must be called to release values stored in the list.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>list_lock</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ada2cd1e942329ec4cf6e31d4398cb608</Anchor>
    <Abstract>Lock the list.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>list_unlock</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a700a9630224e88a9347cbb07f0ee713e</Anchor>
    <Abstract>Lock the list.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>af568895a9c1e2a2fb711cc33bbfe1716</Anchor>
    <Abstract>Remove last value from the list.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a6296729063b9a1e5ae05dd8f72e72975</Anchor>
    <Abstract>Append a new value to the list (tail)</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unshift_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>afe4552bf4031ccc12de0da800f8b8098</Anchor>
    <Abstract>Insert a new value at the beginning of the least (head)</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a0dd51dd5523ea42a6226b20978f0241b</Anchor>
    <Abstract>Remove the first value from the list.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a1a0bb32ce9048b2f403da0cce4988656</Anchor>
    <Abstract>Insert a value at a specific position.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ae11662f4df61c4dd6f0f12cb9ebb1985</Anchor>
    <Abstract>Set the value at a specific position.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subst_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a2bb8c2b2cd1a3bc12dce4959da92a15e</Anchor>
    <Abstract>Replace the value stored at a specific position with a new value.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pick_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>afa569813aeab7e67d10fac3b4da00012</Anchor>
    <Abstract>Pick the value at a specific position.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a38bee6169dd4af116f26a75efdd2bba2</Anchor>
    <Abstract>Fetch (aka: Pick and Remove) the value at a specific position.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>move_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aa7ee4fe1e2aa8571af9181318135ce8a</Anchor>
    <Abstract>Move an existing value to a new position.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap_values</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ad336f010e131a9d1d2b116c2399d45b3</Anchor>
    <Abstract>Swap two values.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>foreach_list_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a70424ac1b6bfe66d227d46e894cd32f5</Anchor>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a756f56aaeec780ddee663b02984a0c85</Anchor>
    <Abstract>Allocate resources for a new tagged value.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_tagged_value_nocopy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ad3f56287a9b85941b0a2617b55aefb7d</Anchor>
    <Abstract>Allocate resources for a new tagged value without copying the value.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create_tagged_sublist</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ae76f036747f1e8c71fa55a68fd8e7b3b</Anchor>
    <Abstract>Create a tagged value where the value is a linked_list_t.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destroy_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a3abce60987b7546270b41cf6ad2bfcb7</Anchor>
    <Abstract>Release resources used by the tagged value tval.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a3b47835af00f141e0a83a6ffa25b6efe</Anchor>
    <Abstract>Same as pop_value but expect the value to be a pointer to a tagged_value_t structure.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a9cd09399eefb3477721bdaf20f4dc2ea</Anchor>
    <Abstract>Same as push_value but when using the list to store tagged values.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unshift_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a4ba5915f484e35f310fa139ad16f3bb1</Anchor>
    <Abstract>Same as unshift_value but when using the list to store tagged values.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shift_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a2899998c810475ad9ed6c6ffe45df0a1</Anchor>
    <Abstract>Same as shift_value but when using the list to store tagged values.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>a890faa5308b04195e174dd693d4aaf57</Anchor>
    <Abstract>Same as insert_value but when using the list to store tagged values.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pick_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>ad341b278e9441fda7c72a27c477f9e99</Anchor>
    <Abstract>Same as pick_value but when using the list to store tagged values.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aeb70c9a2c24a735171e51cc57c2040dd</Anchor>
    <Abstract>Same as fetch_value but when using the list to store tagged values.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_tagged_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>aba4a0ae06523fddb91e0cdea019675dc</Anchor>
    <Abstract>Get a tagged value from the list by using its tag instead of the position.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_tagged_values</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>linklist_8h.html</Path>
    <Anchor>adedabd90e8ff5ff2c15b41ecc66eaada</Anchor>
    <Abstract>Get all value pointers for all tagged values matching a specific tag.</Abstract>
    <DeclaredIn>linklist.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>aa4a28125d71ac80ca6b39531c6c50267</Anchor>
    <Abstract>Opaque structure representing the priority queue.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_free_value_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>af77de2c23bdedd674b2e4b5cc081c1af</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an value is being remo...</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_walk_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>afd031e7b904aeb82a975dbbe518ec6df</Anchor>
    <Abstract>Callback called for each node when walking the priority queue.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>a2ed1cf49290e82ac3f132bc7a89d58b6</Anchor>
    <Abstract>Create a new priority queue.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_insert</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>a340e80d0bd5d341a6128c838b7f95764</Anchor>
    <Abstract>Insert a new value into the queue with a given priority.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_pull_highest</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>a5b873d9136316f4ceaca343648601523</Anchor>
    <Abstract>Pull the the highest priority value out of the queue.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_pull_lowest</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>a7cfb2b4db524a397caa29f5a766bcbbe</Anchor>
    <Abstract>Pull the the lowest priority value out of the queue.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_walk</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>ad12db0bf73a287f9d1bf4427d8d02867</Anchor>
    <Abstract>Walk the entire priority queue and call the provided callback for each visited node.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_remove</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>a69fe9177447376f98647a0c63b5000de</Anchor>
    <Abstract>Remove the first node matching the given value.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>a73388b7e3c833e79fb7a143ad427e115</Anchor>
    <Abstract>Return the number of values stored in the priority queue.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pqueue_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>a0c760d3e652c3f73e0ea11b5316582f4</Anchor>
    <Abstract>Release all the resources used by a priority queue.</Abstract>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PQUEUE_MODE_HIGHEST</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>a66eeaf4584ce074b5369bddbc45f761fab5d5bbcc38dca448543974e1b6b14028</Anchor>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PQUEUE_MODE_LOWEST</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>pqueue_8h.html</Path>
    <Anchor>a66eeaf4584ce074b5369bddbc45f761fabd7ac08c88573162ed0277407edb896b</Anchor>
    <DeclaredIn>pqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_free_value_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>afb2f4b048242082c9ab4af6bd68f367f</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being remov...</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>acb6f6f471055946fe9dc5df1436e89a2</Anchor>
    <Abstract>Opaque structure representing the actual linked queue descriptor.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a473143a0c95ccae52d2870c0bd3c800f</Anchor>
    <Abstract>Create a new queue.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_init</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a9fe3200fa3b05f79737cd7384b93a4e9</Anchor>
    <Abstract>Initialize a pre-allocated queue.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a166305c3a00939b16e2e366dbc652029</Anchor>
    <Abstract>Release all resources related to the queue.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_clear</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a5ee4eeaf45a9382208927ce71d4e8158</Anchor>
    <Abstract>remove all items from the queue</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>addb4f1d8fd0f498c7554e98065a8948e</Anchor>
    <Abstract>Return the total count of items in the queue.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_set_free_value_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>ab479822390e21a16960d10eea3a3a8ee</Anchor>
    <Abstract>Set the callback which must be called to release values stored in the queue.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_pop_right</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>ab6342c556a87ca801abfc52cdba53a49</Anchor>
    <Abstract>Remove last value from the queue.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_push_right</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>af8b6afebab5a58625896d1356c82ef81</Anchor>
    <Abstract>Append a new value to the queue (tail)</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_push_left</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>acfc384b9bdb307e2080b54ed90a2ca2c</Anchor>
    <Abstract>Insert a new value at the beginning of the least (head)</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_pop_left</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>ae58b98ea5ba96c884dc78cd84680646b</Anchor>
    <Abstract>Remove the first value from the queue.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_pop_position</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>a4b3c73c12bc0fdd2bd342e23196c9192</Anchor>
    <Abstract>Remove the value at the specified position.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queue_push_position</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>queue_8h.html</Path>
    <Anchor>ae01574d606b1453ffb4defe1f62c6b67</Anchor>
    <Abstract>Push a new value at a specific position.</Abstract>
    <DeclaredIn>queue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>ae592171fe70c291b3a70a3f6df12af9e</Anchor>
    <Abstract>Opaque structure representing the tree.</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_free_value_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a7ade3c16f709a6033fef9974f0f5d9a2</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being overw...</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_walk_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>aa76c05a0942b82a26ca38aaac85f34c2</Anchor>
    <Abstract>Callback called for each node when walking the tree.</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>ac39e6a47b88f032a6032d3ddb6d74af9</Anchor>
    <Abstract>Create a new red/black tree.</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a5baa6232f465d75967090505ee3cb72f</Anchor>
    <Abstract>Release all the resources used by a red/black tree.</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a6bb64dc33a8ddab2ebd2105f3ab9faea</Anchor>
    <Abstract>Add a new value into the tree.</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_remove</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>adc4969512805f60880e0a88df95c610d</Anchor>
    <Abstract>Remove a node from the tree.</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_find</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a1b619f9994e7ea3ab2c8a437be06228c</Anchor>
    <Abstract>Find the value stored in the node node matching a specific key (if any)</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_walk</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>ad5c6b3927a988be43ba0c79190146065</Anchor>
    <Abstract>Walk the entire tree and call the callback for each visited node.</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbt_walk_sorted</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbtree_8h.html</Path>
    <Anchor>a44c986ac76c688f1a49a3f0543ac3b9d</Anchor>
    <Abstract>Walk the entire tree visiting nodes in ascending order and call the callback for each visited node...</Abstract>
    <DeclaredIn>rbtree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a32d9bf4c520d92a1189c8b45cddc2fa2</Anchor>
    <Abstract>Opaque structure representing a ringbuffer handler.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a02662e4f6204e506fd16dfe77a968535</Anchor>
    <Abstract>Create a new ringbuffer.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_set_mode</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>afb32b20b3aea070c6059af2dbd6f18e4</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_mode</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a1a3fa41660c0debe32f70f0f2b60ea02</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_skip</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a2fa510fbd22aacea8d66e7198a1a67f7</Anchor>
    <Abstract>Skip the specified amount of bytes.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_read</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a556dae8853404216966e49023df0b38c</Anchor>
    <Abstract>Read the specified amount of bytes from the ringbuffer.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_write</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>ab869ffe7fa96bbb2eca9fe7043092c48</Anchor>
    <Abstract>Write the specified amount of bytes into the ringbuffer.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_size</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a44889c863deabd4f68b353d91fb1a488</Anchor>
    <Abstract>Returns the total size of the ringbuffer (specified at creation time)</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_used</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>aa2040e26f0a0ee02bf29173291246ea8</Anchor>
    <Abstract>Returns the amount of bytes stored into the ringbuffer and available for reading.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_available</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>ad0a5db54b73b4dfe60ab3f9198138bb5</Anchor>
    <Abstract>Returns the amount of space left in the ringbuffer for writing.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_find</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>af13c4b4319906ea70c544da775f1d331</Anchor>
    <Abstract>Scan the ringbuffer untill the specific byte is found.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_read_until</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a2fe5935df646bc59d7d10f9c5894fa35</Anchor>
    <Abstract>Read until a specific byte is found or maxsize is reached.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_move</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a541648655f096f678fc5fb9e9cc2c897</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_copy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>aa204cf18c3e8682e519796b405d92630</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_clear</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a8e3f4a03599fdcdaf39db675724f9367</Anchor>
    <Abstract>Clear the ringbuffer by eventually skipping all the unread bytes (if any)</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rbuf_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a6707e5910a6230421e6a683f5bb8c6e3</Anchor>
    <Abstract>Release all resources associated to the rbuf_t structure.</Abstract>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RBUF_MODE_BLOCKING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a355d9576621841405dc8dd55b2d87c90a9c3b5f9f6385dd0b7b5ec8eb46317b2f</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RBUF_MODE_OVERWRITE</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>rbuf_8h.html</Path>
    <Anchor>a355d9576621841405dc8dd55b2d87c90a44bfcddd683f3e158b38eb347bb38f47</Anchor>
    <DeclaredIn>rbuf.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_INCREMENT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a9a8823bebfb34f3ffb0a1fc046117cc7</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_DECREMENT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a98ba35d55811db14d8c55462b2b36f59</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_READ</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a2c28aab3f65d8182aeac327baac1c5d5</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_CMPXCHG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a5b92779f25709677a617fa346cf6a338</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_ATOMIC_CMPXCHG_RETURN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a512324eabd6ec2ece6f8babb4a5ab6dd</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_MARK_ON</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a620f37ba80ce92dde459b83df94b3898</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_MARK_OFF</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a1a00ef8f9f2ea1aae916b9eeaf4a150c</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_IS_MARKED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a9d5cbe64d345ee1438f801ef1d159dba</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_RETAIN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>ac7cecad11a429f49e04564abcdeabdc5</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REFCNT_RELEASE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a44e4ff10ac0218a4cff08848a7a1ad70</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a0a4c54fe6e676efdfdef450a20f9184a</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_node_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a1d0f26fb273aeb9dad7434e96b8096b2</Anchor>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_terminate_node_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a79067844ad82292462a1c1a92fae641f</Anchor>
    <Abstract>Callback called when a node is going to be terminated, which means that its refcount reached 0 and no...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_free_node_ptr_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a7085f33e5814af06d25541fa6399920d</Anchor>
    <Abstract>Callback called when a node is going to be released and the underlying ptr can be released as well...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a1ccf9e3a68f8ce43fa9ec514215a2f47</Anchor>
    <Abstract>Create a new refcounted context.</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>refcnt_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a7447f1452af0f46c9fd060ae3252b179</Anchor>
    <Abstract>Release all resources hold by the refcounted context pointed by refcnt.</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deref_link</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>aaefd29a35d9eddf0e77341d432774f6f</Anchor>
    <Abstract>Atomically creates a reference to a refcounted object.</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deref_link_d</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>ac41b1b58005f46567f12e58b6767447b</Anchor>
    <Abstract>Atomically creates a reference to a refcounted object. If the object was marked for deletion...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release_ref</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>af0083f7de2282f12c4ae0f5d2a17ad66</Anchor>
    <Abstract>Release a reference by decreasing its refcount.</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare_and_swap_ref</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>ac82fbeffa709f60e15c62be64be293bb</Anchor>
    <Abstract>Atomically compare a reference to a refcounted object with an existing pointer and swap it with a new...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>new_node</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a785a60c5adef70733a59541b80665aad</Anchor>
    <Abstract>Create a new refcounted node which encapsulates a given pointer.</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_node_ptr</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>abe836170e50f0fabd6a12a9c0be2ce90</Anchor>
    <Abstract>Retrieve the pointer stored in the refcounted object.</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retain_ref</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>a2405aaba021bbe47fac32685791ebd27</Anchor>
    <Abstract>Retain a refcounted object by increasing its refcount.</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store_ref</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>refcnt_8h.html</Path>
    <Anchor>af9124ddd2848c9c2da1ae0c4b72f36c2</Anchor>
    <Abstract>Atomically store a reference to a refcounted object in the memory pointed by the provided address...</Abstract>
    <DeclaredIn>refcnt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>accbc3ef232e863e20201ed60c44029b2</Anchor>
    <Abstract>Opaque structure representing the actual ringbuffer descriptor.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_free_value_callback_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a9c2b59c5ab5ad8ef3688c1f9aaf2d6cf</Anchor>
    <Abstract>Callback that, if provided, will be called to release the value resources when an item is being overw...</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_set_free_value_callback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>ac5ea4c1e95761c3480b21a3e34c01ef9</Anchor>
    <Abstract>Set the callback which must be called to release values stored in the ringbuffer.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_create</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a425a2514600d8ba4ffb66951f6264abd</Anchor>
    <Abstract>Create a new ringbuffer descriptor.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_set_mode</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a9d347fcfa969af8bd672c775e88fd7f1</Anchor>
    <Abstract>Change the mode of an existing ringbuffer.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_mode</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a01580394ff3f00f776341ecbb831e8af</Anchor>
    <Abstract>Get the current mode of an existing ringbuffer.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_write</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>aae336c36bb271a6b7b9f98f7bd84d8c8</Anchor>
    <Abstract>Push a new value into the ringbuffer.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_read</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a15d64f5859c79ce47c2790f33f559eef</Anchor>
    <Abstract>Read the next value in the ringbuffer.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_destroy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>aa2d87f7f450fd7f9d5f39d97c64a1c15</Anchor>
    <Abstract>Release all resources associated to the ringbuffer.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_write_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a95fbe59fc6fe70e458fc940e532929d7</Anchor>
    <Abstract>Returns the count of &amp;#39;write operations&amp;#39; executed so far.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_read_count</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a05b2184be7c1423c568de96478a310b7</Anchor>
    <Abstract>Returns the count of &amp;#39;read operations&amp;#39; executed so far.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_stats</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a455f5f762c97cc38fea0aa87383063cb</Anchor>
    <Abstract>Return a string descriptions of the ringbuffer internals.</Abstract>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rqueue_isempty</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a55c7ad4235d3a011fbfd63126c57ff18</Anchor>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RQUEUE_MODE_BLOCKING</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a6e7f6a49cc6fcb72d27dd0ebf3f7aed4a8dca6956f92c50d70f4704c500790bbd</Anchor>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RQUEUE_MODE_OVERWRITE</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>rqueue_8h.html</Path>
    <Anchor>a6e7f6a49cc6fcb72d27dd0ebf3f7aed4a517a681255c962ba86d24aa4aa347deb</Anchor>
    <DeclaredIn>rqueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
</Tokens>
